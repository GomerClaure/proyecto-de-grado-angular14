import { test, expect } from '@playwright/test';

test('Modificar datos personales del propietario', async ({ page }) => {
  await page.goto('http://localhost:4200/');
  await page.getByRole('link', { name: 'Login' }).click();
  await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').click();
  await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').fill('propietario');
  await page.locator('input[type="password"]').click();
  await page.locator('input[type="password"]').fill('12345678');
  await page.getByRole('button', { name: 'Iniciar Sesión' }).click();
  await page.getByRole('button', { name: 'Foto de perfil' }).click();
  await page.getByRole('link', { name: 'Datos personales' }).click();
  await page.getByPlaceholder('Nombre').click();
  await page.getByPlaceholder('Nombre').fill('Coby Cambio prueba');
  await page.getByRole('button', { name: 'Actualizar' }).click();
  await page.waitForSelector('text=Datos actualizados correctamente', { timeout: 10000 });
  const confirmationMessage = await page.locator('text=Datos actualizados correctamente');
  expect(await confirmationMessage.isVisible()).toBe(true);
});
test('Registrar empleado', async ({ page }) => {
    await page.goto('http://localhost:4200/');
    await page.getByRole('link', { name: 'Login' }).click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').fill('propietario');
    await page.locator('input[type="password"]').click();
    await page.locator('input[type="password"]').fill('12345678');
    await page.getByRole('button', { name: 'Iniciar Sesión' }).click();
    await page.getByRole('button', { name: 'Registro' }).click();
    await page.getByRole('link', { name: 'Registrar empleado' }).click();
    await page.getByLabel('Nombre', { exact: true }).click();
    await page.getByLabel('Nombre', { exact: true }).fill('Empleado');
    await page.getByLabel('Apellido Paterno').click();
    await page.getByLabel('Apellido Paterno').fill('Prueba');
    await page.getByLabel('Apellido Materno').click();
    await page.getByLabel('Apellido Materno').fill('Pruebaaa');
    await page.getByLabel('Fecha de Nacimiento').fill('1998-12-29');
    await page.getByText('TeléfonoCarnet de Identidad').click();
    await page.getByLabel('Teléfono').click();
    await page.getByLabel('Teléfono').fill('65303243');
    await page.getByLabel('Carnet de Identidad').click();
    await page.getByLabel('Carnet de Identidad').fill('5689234');
    await page.getByLabel('Dirección').click();
    await page.getByLabel('Dirección').fill('America Libertador');
    await page.getByLabel('Correo Electrónico').click();
    await page.getByLabel('Correo Electrónico').fill('Empleado12345678@gmail.com');
    await page.getByText('Subir foto').click();
    await page.locator('body').filter({ hasText: 'Zack Haag Menu Lista de' }).setInputFiles('ggggg.JPG');
    await page.getByText('Cajero').click();
    await page.getByLabel('Fecha de Contratación').fill('2024-11-01');
    await page.getByRole('button', { name: 'Registrar' }).click();
    await page.waitForSelector('text=Se registro el empleado correctamente', { timeout: 10000 });
    const confirmationMessage = await page.locator('text=Se registro el empleado correctamente');
    expect(await confirmationMessage.isVisible()).toBe(true);
  });
test('Modificar datos de empleado', async ({ page }) => {
    await page.goto('http://localhost:4200/');
    await page.getByRole('link', { name: 'Login' }).click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').fill('mesero');
    await page.locator('input[type="password"]').click();
    await page.locator('input[type="password"]').fill('12345678');
    await page.getByRole('button', { name: 'Iniciar Sesión' }).click();
    await page.getByRole('button', { name: 'Foto de perfil' }).click();
    await page.getByRole('link', { name: 'Datos personales' }).click();
  });
test('Dar de baja empleado', async ({ page }) => {
    await page.goto('http://localhost:4200/');
    await page.getByRole('link', { name: 'Login' }).click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').fill('propietario');
    await page.locator('input[type="password"]').click();
    await page.locator('input[type="password"]').fill('12345678');
    await page.getByRole('button', { name: 'Iniciar Sesión' }).click();
    await page.getByRole('link', { name: 'Empleados' }).click();
    await page.locator('.card-img-container').first().click();
    await page.getByRole('button', { name: 'Dar de Baja' }).click();
    await page.waitForSelector('text=Empleado dado de baja', { timeout: 10000 });
    const confirmationMessage = await page.locator('text=Empleado dado de baja');
    expect(await confirmationMessage.isVisible()).toBe(true);
  });
test('Dar de alta empleado', async ({ page }) => {
    await page.goto('http://localhost:4200/');
    await page.getByRole('link', { name: 'Login' }).click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').click();
    await page.locator('div').filter({ hasText: /^Nombre$/ }).getByRole('textbox').fill('propietario');
    await page.locator('input[type="password"]').click();
    await page.locator('input[type="password"]').fill('12345678');
    await page.getByRole('button', { name: 'Iniciar Sesión' }).click();
    await page.getByRole('link', { name: 'Empleados' }).click();
    await page.locator('.card-img-container').first().click();
    await page.getByRole('button', { name: 'Dar de Alta' }).click();
    await page.waitForSelector('text=Empleado dado de alta', { timeout: 10000 });
    const confirmationMessage = await page.locator('text=Empleado dado de alta');
    expect(await confirmationMessage.isVisible()).toBe(true);
  });